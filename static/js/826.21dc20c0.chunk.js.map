{"version":3,"file":"static/js/826.21dc20c0.chunk.js","mappings":"mQAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,E,mBCcpB,SAASC,EAAeC,GACrCC,IAAAA,OAAAA,QAAwBD,EAAO,0BAChC,CAdDC,IAAAA,OAAAA,KAAqB,CACnBC,MAAO,QACPC,SAAU,aACVC,SAAU,OACVC,QAAS,EACTC,QAAS,CACPC,WAAY,UACZC,UAAW,UACXC,kBAAmB,a,cCTvB,GAAgB,YAAc,0BAA0B,mBAAqB,iCAAiC,mBAAqB,iCAAiC,iBAAmB,gC,SCSxK,SAASC,EAAT,GAA4B,EAAZC,SAAa,IAC1C,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAON,EAAP,KAAgBU,EAAhB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEMpB,GAAWqB,EAAAA,EAAAA,IAAYvB,GAEvBwB,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,cAAlBxB,EAAR,EAAQA,KAAMyB,EAAd,EAAcA,MAEd,OAAQzB,GACN,IAAK,OACHa,EAAQY,GACR,MAEF,IAAK,SACHV,EAAUU,GACV,MAEF,QACE,OAEL,EAOKC,EAAc,SAAA1B,GAClB,IAAM2B,EAA2B3B,EAAK4B,oBAEhCC,EAAS/B,EAASgC,MAAMC,MAAK,YACjC,OAD+C,EAAX/B,KACxB4B,sBAAwBD,CACrC,IAED,OAAOK,QAAQH,EAChB,EAEKI,EAAgB,mCAAG,0FAASjC,EAAT,EAASA,KAAMc,EAAf,EAAeA,OACtCI,GAAW,IACPQ,EAAY1B,GAFO,uBAGrBgB,GAAW,GACXE,GAAW,GACXnB,EAAeC,GALM,0CAQjBoB,GAASc,EAAAA,EAAAA,IAAgB,CAAElC,KAAAA,EAAMc,OAAAA,KARhB,OASvBE,GAAW,GAvBXH,EAAQ,IACRE,EAAU,IAwBVG,GAAW,GACXiB,QAAQC,IAAI9B,GAZW,4CAAH,sDAqBtB,OACE,kBAAM+B,UAAWC,EAAAA,YAAoB3B,SAPlB,SAAAY,GACnBA,EAAEgB,iBAESN,EAAiB,CAAEjC,KAAAA,EAAMc,OAAAA,GACrC,EAGC,WACE,mBAAOuB,UAAWC,EAAAA,mBAAlB,kBAEE,kBACED,UAAWC,EAAAA,mBACXE,KAAK,OACLxC,KAAK,OACLyC,aAAa,MACbhB,MAAOzB,EACP0C,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUvB,QAGd,mBAAOe,UAAWC,EAAAA,mBAAlB,oBAEE,kBACED,UAAWC,EAAAA,mBACXE,KAAK,MACLxC,KAAK,SACLyC,aAAa,MACbhB,MAAOX,EACP4B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUvB,QAGd,mBAAQkB,KAAK,SAASH,UAAWC,EAAAA,iBAAjC,SACGrB,GACC,SAAC,KAAD,CACEoB,UAAWC,EAAAA,OACXQ,OAAO,KACP5C,MAAM,KACN6C,MAAM,UACNC,eAAe,UACfC,YAAa,EACbC,UAAU,oBACVC,OAAO,IACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IAGX,kBAKT,CCxHD,IAQA,EARuB,WACrB,OACE,0BACE,SAAC5C,EAAD,KAGL,C","sources":["redux/contacts/contacts-selectors.js","utils/warningMessage.js","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.scss?dea5","components/Form/Form.jsx","pages/AddContactPage/AddContactPage.jsx"],"sourcesContent":["export const getAllContacts = store => store.contacts;\n","import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'center-top',\n  distance: '10px',\n  opacity: 1,\n  warning: {\n    background: '#ffa229',\n    textColor: '#645D55',\n    notiflixIconColor: '#645D55',\n  },\n});\n\nexport default function warningMessage(name) {\n  Notiflix.Notify.warning(name + ' is already in contacts');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"Form_contactForm__Fq+9K\",\"contactForm__label\":\"Form_contactForm__label__mY5X9\",\"contactForm__input\":\"Form_contactForm__input__OE+Pb\",\"contactForm__btn\":\"Form_contactForm__btn__tVJaQ\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\nimport { getAllContacts } from 'redux/contacts/contacts-selectors';\n\nimport warningMessage from 'utils/warningMessage';\nimport { Oval } from 'react-loader-spinner';\nimport styles from './Form.module.scss';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [warning, setWarning] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const contacts = useSelector(getAllContacts);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const isDublicate = name => {\n    const normalizedNewContactName = name.toLocaleLowerCase();\n\n    const result = contacts.items.find(({ name }) => {\n      return name.toLocaleLowerCase() === normalizedNewContactName;\n    });\n\n    return Boolean(result);\n  };\n\n  const handleAddContact = async ({ name, number }) => {\n    setLoading(true);\n    if (isDublicate(name)) {\n      setWarning(true);\n      setLoading(false);\n      warningMessage(name);\n      return;\n    }\n    await dispatch(fetchAddContact({ name, number }));\n    setWarning(false);\n    resetForm();\n    setLoading(false);\n    console.log(warning);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit = handleAddContact({ name, number });\n  };\n\n  return (\n    <form className={styles.contactForm} onSubmit={handleSubmit}>\n      <label className={styles.contactForm__label}>\n        Name\n        <input\n          className={styles.contactForm__input}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={styles.contactForm__label}>\n        Number\n        <input\n          className={styles.contactForm__input}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\" className={styles.contactForm__btn}>\n        {loading ? (\n          <Oval\n            className={styles.loader}\n            height=\"20\"\n            width=\"20\"\n            color=\"#ffa229\"\n            secondaryColor=\"#ffa229\"\n            strokeWidth={6}\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        ) : (\n          'Add contact'\n        )}\n      </button>\n    </form>\n  );\n}\n","import Form from 'components/Form/Form';\n\n// import styles from './AddContactPage.module.scss';\n\nconst AddContactPage = () => {\n  return (\n    <div>\n      <Form />\n    </div>\n  );\n};\n\nexport default AddContactPage;\n"],"names":["getAllContacts","store","contacts","warningMessage","name","Notiflix","width","position","distance","opacity","warning","background","textColor","notiflixIconColor","Form","onSubmit","useState","setName","number","setNumber","setWarning","loading","setLoading","useSelector","dispatch","useDispatch","handleInputChange","e","currentTarget","value","isDublicate","normalizedNewContactName","toLocaleLowerCase","result","items","find","Boolean","handleAddContact","fetchAddContact","console","log","className","styles","preventDefault","type","autoComplete","pattern","title","required","onChange","height","color","secondaryColor","strokeWidth","ariaLabel","radius","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}